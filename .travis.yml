language: java

jdk:
  - openjdk11

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

before_install:
  - echo -n "*** LIFECYCLE STARTED - 'before_install' *****************************************************************"
  - echo -n "*** LIFECYCLE COMPLETED - before_install *****************************************************************"

# Note: 'Install' here means things into the Travis environment that are needed.
install:
  - echo "*** LIFECYCLE STARTED - 'install' ***************************************************************************"
  - echo "*** LIFECYCLE COMPLETED - 'install' *************************************************************************"

# Build the code then build the javadoc.
before_script:
  - echo -n "*** LIFECYCLE STARTED - 'before_script' ******************************************************************"
  - mvn package -DskipTests=true -Dmaven.javadoc.skip=true -B -V
#  - mvn javadoc:javadoc -B -V
  - echo -n "*** LIFECYCLE COMPLETED - 'before_script' ****************************************************************"

# Used here to upload the docker file to Docker Hub.
script:
  - echo -n "*** LIFECYCLE STARTED - 'script' *************************************************************************"
#  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#  - docker build -t paulscherrerinstitute/wica-stream:latest -f docker/Dockerfile.http .
#  - docker push paulscherrerinstitute/wica-stream:latest
#  - echo -n "LIFECYCLE COMPLETED - 'script' ***************************************************************************"

# The deploy phase is optional and runs after the script. Here we use it to publish
# the Javadoc on the GitHub pages site.
deploy:
  provider: releases
  api_key: 7c3785d5cfb4fdd3b002d986968e2436e6892e3d
  file: target/wica-http-1.0.0-RELEASE.jar
  skip_cleanup: true

#  provider: pages
#  local_dir: $TRAVIS_BUILD_DIR/target/site/apidocs
#  skip_cleanup: true
#  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
#  keep_history: true
#  on:
#    branch: master


after_script:
  - echo -n "*** LIFECYCLE STARTED - 'after_script' *******************************************************************"
  - echo -n "*** LIFECYCLE COMPLETED - 'after_script' *****************************************************************"

